name: Auto-Publish to NPM

on:
  push:
    branches:
      - main  # Triggers on any push to main branch

jobs:
  test-build-publish:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          registry-url: 'https://registry.npmjs.org'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Run tests
        run: npm test
      
      - name: Build
        run: npm run build
      
      - name: Configure Git
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
      
      - name: Bump version and create tag
        id: version-bump
        run: |
          # Determine version bump type based on commit messages
          if git log --format=%s -n 1 | grep -E "^(feat|feature)(\(.+\))?: "; then
            npm version minor --no-git-tag-version
          elif git log --format=%s -n 1 | grep -E "^(fix|bugfix)(\(.+\))?: "; then
            npm version patch --no-git-tag-version
          elif git log --format=%s -n 1 | grep -E "^(BREAKING|breaking)(\(.+\))?: "; then
            npm version major --no-git-tag-version
          else
            npm version patch --no-git-tag-version
          fi
          
          NEW_VERSION=$(node -p "require('./package.json').version")
          echo "version=$NEW_VERSION" >> $GITHUB_OUTPUT
          
          # Commit version bump
          git add package.json package-lock.json
          git commit -m "chore: bump version to $NEW_VERSION [skip ci]"
          git tag "v$NEW_VERSION"
          git push origin main
          git push origin "v$NEW_VERSION"
      
      - name: Publish to NPM
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      
      - name: Create package tarball
        run: npm pack
      
      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.version-bump.outputs.version }}
          release_name: Release v${{ steps.version-bump.outputs.version }}
          draft: false
          prerelease: false
          body: |
            ## Changes
            Auto-published from main branch.
            
            ## Installation
            ```bash
            npm install -g brain-mcp@${{ steps.version-bump.outputs.version }}
            ```
      
      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./brain-mcp-${{ steps.version-bump.outputs.version }}.tgz
          asset_name: brain-mcp-${{ steps.version-bump.outputs.version }}.tgz
          asset_content_type: application/gzip